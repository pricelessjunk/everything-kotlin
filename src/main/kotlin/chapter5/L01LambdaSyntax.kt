package chapter5

val listOfPerson = listOf(Person("Alice", 23) , Person("Kagura",17))

fun main() {
    val sum = { x: Int, y: Int -> x + y }
    println(sum(2,3))

    // maxBy function
    println(listOfPerson.maxOf { it.age })  // Should print 23. "it" is an autogenerated param name

    // joinToString
    println(listOfPerson.joinToString(transform = {it.name}))   // Alica, Kagura
    // or
    println(listOfPerson.joinToString {p: Person -> p.name})    // Uses a named argument to pass the lambda

    memberReferences()
}

fun memberReferences() {
    val getAge = { person: Person -> person.age }
    // or
    val getAgeAlternative = { Person :: age }

    run(::salute)           // Top level functions can be referenced from here. Extension functions can be referenced the same way

    // Another example
    val action = { person: Person, message: String ->
        sendEmail(person, message)
    }
    // same as
    val nextAction = ::sendEmail
}

fun salute() = println("Salute")

fun sendEmail(p: Person, m: String) : Boolean = true  // the return type is just dumy


data class Person(val name: String, val age: Int)